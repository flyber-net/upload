// Generated by LiveScript 1.5.0
(function(){
  var request, fs, toString$ = {}.toString;
  request = require('request');
  fs = require('fs');
  module.exports = function(input, options, callback){
    var stream, parseOptions, appliedOptions, config;
    if (toString$.call(input).slice(8, -1) === 'String' && !fs.existsSync(input)) {
      callback({
        err: "File " + input + " doesn't exist"
      });
    }
    stream = (function(){
      switch (false) {
      case toString$.call(input).slice(8, -1) !== 'String':
        return fs.createReadStream(input);
      default:
        return input;
      }
    }());
    parseOptions = function(options){
      var parsed;
      parsed = options.match(/(.+)@(.+)\.flyber\.net/);
      return {
        permission: parsed[1],
        subdomain: parsed[2]
      };
    };
    appliedOptions = (function(){
      switch (false) {
      case toString$.call(options).slice(8, -1) !== 'String':
        return parseOptions(options);
      default:
        return options;
      }
    }());
    config = {
      url: "http://" + options.subdomain + ".flyber.net/upload",
      headers: {
        permission: options.permission
      },
      formData: {
        file: stream
      }
    };
    return request.post(config, function(err, httpResponse, body){
      if (err != null) {
        callback(err);
      } else {
        callback(JSON.parse(body));
      }
    });
  };
}).call(this);
